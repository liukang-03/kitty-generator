<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${table.daoPackageName}.${table.className}Mapper">

  <resultMap id="BaseResultMap" type="${table.modelPackageName}.${table.className}">
<%
	for(column in table.columns) {
		if(column.isPrimaryKey) {
%>	
	<id column="${column.name}" jdbcType="${column.jdbcType}" property="${column.fieldName}" />
<%
		} else {
%>
	<result column="${column.name}" jdbcType="${column.jdbcType}" property="${column.fieldName}" />
<%
		}
	}
%>
  </resultMap>

  <%
      var column_names = "";
      var column_field_names = "";
      var columnNames_modifyIgnore=["createTime","lastUpdateTime","lastUpdateBy","delFlag"];
      var target_columns=[];
      for(column in table.columns) {
        if(!array.contain(columnNames_modifyIgnore,column.fieldName)){
            column_names = column_names + column.name + "," ;
            column_field_names = column_field_names + column.fieldName + "," ;
            array.add(target_columns, column);
        }
      }
      column_names = strutil.subStringTo(column_names, 0, strutil.length(column_names)-1);
      column_field_names = strutil.subStringTo(column_field_names, 0, strutil.length(column_field_names)-1);
  %>
  <sql id="Base_Column_List">
      ${column_names}
  </sql>

  <sql id="Base_Column_Field_List">
      ${column_field_names}
  </sql>

  <insert id="add" parameterType="${table.modelPackageName}.${table.className}">
    insert into ${table.name}
    <trim prefix="(" suffix=")" suffixOverrides=",">
<%
	for(column in target_columns) {
%>
      <if test="${column.fieldName} != null">${column.name},</if>
<%
	}
%>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
<%
	for(column in target_columns) {
%>
      <if test="${column.fieldName} != null">#{${column.fieldName},jdbcType=${column.jdbcType}},</if>
<%
	}
%>
    </trim>
  </insert>

  <delete id="delete" parameterType="java.lang.${table.primaryKey.javaType}">
    delete from ${table.name}
    where ${table.primaryKey.name} = #{${table.primaryKey.fieldName},jdbcType=${table.primaryKey.jdbcType}}
  </delete>
  
  <update id="update" parameterType="${table.modelPackageName}.${table.className}">
    update ${table.name}
    <set>
<%
	for(column in target_columns) {
%>
      <if test="${column.fieldName} != null">${column.name} = #{${column.fieldName},jdbcType=${column.jdbcType}},</if>
<%
	}
%>   
    </set>
    where ${table.primaryKey.name} = #{${table.primaryKey.fieldName},jdbcType=${table.primaryKey.jdbcType}}
  </update>

  <select id="findById" parameterType="java.lang.${table.primaryKey.javaType}" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from ${table.name}
    where ${table.primaryKey.name} = #{${table.primaryKey.fieldName},jdbcType=${table.primaryKey.jdbcType}}
  </select>

  <sql id="findList">
    select <include refid="Base_Column_List" />
    from ${table.name} t
    where 1=1
  </sql>

  <select id="findPage" resultMap="BaseResultMap">
    <include refid="findList" />
    <%
       for(column in target_columns) {
          if(column.isSearch) {
    %>
    <if test="${column.fieldName} != null"> And t.${column.name} like CONCAT('%',#{${column.fieldName} },'%') </if>
    <%
          }
       }
    %>
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    <include refid="findList" />
  </select>

  <% if(!isEmpty(table.uniqueKeys)) { %>
  <!-- 唯一性校验  -->
  <select id="isUnique" resultType="java.lang.Integer" parameterType="map">
     select count(1) from ${table.name} t
     where 1=1 <% for(uniqueKey in table.uniqueKeys){ %> and t.${uniqueKey.name} = #{${uniqueKey.fieldName}} <% } %>
     <if test="id != null"> and t.id != #{id} </if>
  </select>
  <% } %>

</mapper>