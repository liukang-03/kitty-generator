package ${table.controllerPackageName};

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.hhlx.core.http.HttpResult;
import com.hhlx.core.page.PageRequest;

import ${table.modelPackageName}.${table.className};
import ${table.servicePackageName}.${table.className}Service;

import javax.servlet.http.HttpServletRequest;
import org.apache.commons.lang3.StringUtils;

/**
 * ---------------------------
 * ${table.description} (${table.className}Controller)		 
 * ---------------------------
 * 作者：  kitty-generator
 * 时间：  ${strutil.formatDate(date(),'yyyy-MM-dd HH:mm:ss')}
 * 说明：  ${table.className}Controller
 * ---------------------------
 */
@RestController
@RequestMapping("${table.objectName}")
public class ${table.className}Controller {

	@Autowired
	private ${table.className}Service ${table.objectName}Service;

	/**
	 * 保存${table.description}
	 * @param record
	 * @return
	 */	
	@PostMapping(value="/save")
	public HttpResult save(@RequestBody ${table.className} record) {
		return HttpResult.ok(${table.objectName}Service.save(record));
	}

    /**
     * 删除${table.description}
     * @param records
     * @return
     */
	@PostMapping(value="/delete")
	public HttpResult delete(@RequestBody List<${table.className}> records) {
		return HttpResult.ok(${table.objectName}Service.delete(records));
	}

    /**
     * 基础分页查询
     * @param pageRequest
     * @return
     */    
	@PostMapping(value="/findPage")
	public HttpResult findPage(@RequestBody PageRequest pageRequest) {
		return HttpResult.ok(${table.objectName}Service.findPage(pageRequest));
	}

	/**
     * 查询所有数据
     * @return
     */
    @PostMapping(value="/findAll")
    public HttpResult findAll() {
        return HttpResult.ok(${table.objectName}Service.findAll());
    }
	
    /**
     * 根据主键查询
     * @param ${table.primaryKey.fieldName}
     * @return
     */ 	
	@GetMapping(value="/findById")
	public HttpResult findById(@RequestParam ${table.primaryKey.javaType} ${table.primaryKey.fieldName}) {
		return HttpResult.ok(${table.objectName}Service.findById(${table.primaryKey.fieldName}));
	}

	<% if(!isEmpty(table.uniqueKeys)) { %>
	@RequestMapping(value="/isUnique")
    public HttpResult isUnique(HttpServletRequest request) {
		String id = request.getParameter("id");
		<%
		    for(uniqueKey in table.uniqueKeys){
		%>
		String ${uniqueKey.fieldName} = request.getParameter("${uniqueKey.fieldName}");
		<%
		    }
		%>
		Map<String,Object> paramMap = new HashMap<>();
		paramMap.put("id", StringUtils.trimToNull(id));
		<%
            for(uniqueKey in table.uniqueKeys){
        %>
		paramMap.put("${uniqueKey.fieldName}", ${uniqueKey.fieldName});
		<%
            }
        %>
		boolean isUnique = ${table.objectName}Service.isUnique(paramMap);
		
		//设备编码唯一性校验
		return HttpResult.ok(isUnique);
    }
    <% } %>

}
